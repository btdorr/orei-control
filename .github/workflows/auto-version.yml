name: Auto Version Update

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  update-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get commit count
      id: commit_count
      run: echo "count=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
    
    - name: Get short commit hash
      id: commit_hash
      run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    - name: Get current timestamp
      id: timestamp
      run: echo "timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
    
    - name: Calculate version
      id: version
      run: |
        # Major version starts at 1, minor increments every 10 commits, patch is remainder
        COMMIT_COUNT=${{ steps.commit_count.outputs.count }}
        MAJOR=1
        MINOR=$((COMMIT_COUNT / 10))
        PATCH=$((COMMIT_COUNT % 10))
        VERSION="$MAJOR.$MINOR.$PATCH"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Update version.json
      run: |
        cat > version.json << EOF
        {
          "version": "${{ steps.version.outputs.version }}",
          "build": "${{ steps.commit_count.outputs.count }}",
          "timestamp": "${{ steps.timestamp.outputs.timestamp }}",
          "commit": "${{ steps.commit_hash.outputs.hash }}"
        }
        EOF
    
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet version.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit version update
      if: steps.changes.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.json
        git commit -m "Auto-update version to ${{ steps.version.outputs.version }} [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}